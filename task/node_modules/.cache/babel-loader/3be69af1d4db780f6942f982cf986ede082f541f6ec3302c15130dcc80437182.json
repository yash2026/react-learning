{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nconst usehttp = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(usehttp, \"n5SlQVdc2sZg3OeT00ajYzBfpL0=\");\nexport default usehttp;","map":{"version":3,"names":["React","usehttp","requestConfig","applyData","_s","isLoading","setIsLoading","useState","error","setError","tasks","setTasks","fetchTasks","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","sendRequest"],"sources":["C:/My data/Web projects/React basics/task/src/hooks/usehttp.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst usehttp = (requestConfig, applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const fetchTasks = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method,\r\n        headers: requestConfig.headers,\r\n        body: JSON.stringify(requestConfig.body),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    sendRequest: sendRequest,\r\n  };\r\n};\r\n\r\nexport default usehttp;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGA,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMK,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrCP,YAAY,CAAC,IAAI,CAAC;IAClBG,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACb,aAAa,CAACc,GAAG,EAAE;QAC9CC,MAAM,EAAEf,aAAa,CAACe,MAAM;QAC5BC,OAAO,EAAEhB,aAAa,CAACgB,OAAO;QAC9BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,aAAa,CAACiB,IAAI;MACzC,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCtB,SAAS,CAACqB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACArB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBG,KAAK,EAAEA,KAAK;IACZoB,WAAW,EAAEA;EACf,CAAC;AACH,CAAC;AAACxB,EAAA,CA/BIH,OAAO;AAiCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}