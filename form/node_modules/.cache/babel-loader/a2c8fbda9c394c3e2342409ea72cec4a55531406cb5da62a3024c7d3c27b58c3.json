{"ast":null,"code":"var _jsxFileName = \"C:\\\\My data\\\\Web projects\\\\React basics\\\\form\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameValid, setEnteredNameValid] = useState(true);\n  const [enteredNametouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameValid) {\n      console.log(\"Yash is great\");\n    }\n  }, [enteredNameValid]);\n  const nameInputHandler = e => {\n    setEnteredName(e.target.value);\n    if (e.target.value.trim() !== \"\") {\n      setEnteredNameValid(true);\n    }\n  };\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameValid(false);\n    }\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameValid(false);\n      return;\n    }\n    setEnteredNameValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n  const nameInputInvalid = !enteredNameValid && enteredNametouched;\n  const nameInputClasses = nameInputInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), nameInputInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter the values in the inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"U2knoeqQNOWeWwXIj11jZ+bhtPg=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameValid","setEnteredNameValid","enteredNametouched","setEnteredNameTouched","console","log","nameInputHandler","e","target","value","trim","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","nameInputRef","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/My data/Web projects/React basics/form/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameValid, setEnteredNameValid] = useState(true);\n  const [enteredNametouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameValid) {\n      console.log(\"Yash is great\");\n    }\n  }, [enteredNameValid]);\n  const nameInputHandler = (e) => {\n    setEnteredName(e.target.value);\n\n    if (e.target.value.trim() !== \"\") {\n      setEnteredNameValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameValid(false);\n    }\n  };\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameValid(false);\n      return;\n    }\n\n    setEnteredNameValid(true);\n    console.log(enteredName);\n\n    setEnteredName(\"\");\n  };\n  const nameInputInvalid = !enteredNameValid && enteredNametouched;\n  const nameInputClasses = nameInputInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputInvalid && (\n          <p className=\"error-text\">Please Enter the values in the inputs</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}