{"ast":null,"code":"var _jsxFileName = \"C:\\\\My data\\\\Web projects\\\\React basics\\\\http-form\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst isfiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formValidityIsvalid, setFormValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isfiveChars(enteredPostalCode);\n    setFormValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredName && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name\n    });\n  };\n  const nameControlClasses = `%{classes.control} ${formValidityIsvalid.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `%{classes.control} ${formValidityIsvalid.street ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `%{classes.control} ${formValidityIsvalid.postalCode ? \"\" : classes.invalid}`;\n  const cityControlClasses = `%{classes.control} ${formValidityIsvalid.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formValidityIsvalid.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formValidityIsvalid.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), !formValidityIsvalid.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), !formValidityIsvalid.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"+o/so9j0jubHFrI48BLCJLWhaJ0=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","jsxDEV","_jsxDEV","isEmpty","value","trim","isfiveChars","length","Checkout","props","_s","formValidityIsvalid","setFormValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["C:/My data/Web projects/React basics/http-form/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isfiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formValidityIsvalid, setFormValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isfiveChars(enteredPostalCode);\n\n    setFormValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    });\n\n    const formIsValid =\n      enteredName &&\n      enteredStreetIsValid &&\n      enteredCityIsValid &&\n      enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name,\n    });\n  };\n\n  const nameControlClasses = `%{classes.control} ${\n    formValidityIsvalid.name ? \"\" : classes.invalid\n  }`;\n  const streetControlClasses = `%{classes.control} ${\n    formValidityIsvalid.street ? \"\" : classes.invalid\n  }`;\n  const postalCodeControlClasses = `%{classes.control} ${\n    formValidityIsvalid.postalCode ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `%{classes.control} ${\n    formValidityIsvalid.city ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formValidityIsvalid.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formValidityIsvalid.street && (\n          <p>Please enter a valid street address!</p>\n        )}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formValidityIsvalid.postalCode && (\n          <p>Please enter a valid postal code!</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formValidityIsvalid.city && <p>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}